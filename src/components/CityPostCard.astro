---
import PostageStamp from "../icons/astro/PostageStampIcon.astro";

interface Props {
    city: string;
    message: string;
    from: string;
    to: string;
    date: string;
    image: string;
    postageStamp: string;
}

const { city, message, from, to, date, image, postageStamp } = Astro.props;
const cityId = city.split(' ').join('').toLowerCase();
---
<city-postcard data-city={cityId} class="flex aspect-video w-screen sm:w-[639px] h-auto flex-col justify-center px-2 cursor-pointer">
    <div id={`${cityId}PostcardContainer`} class="h-full w-full [perspective:500px]">
        <div id={`${cityId}Postcard`} class="relative h-full w-full rounded-lg shadow-xl transition-all duration-200 [transform-style:preserve-3d]">
            <section class="absolute inset-0 bg-stone-400 rounded-lg">
                <img src={ image } alt="" class="w-full h-full rounded-lg object-cover opacity-75">
                <div class="absolute inset-0 grid place-content-center text-black/50 text-7xl sm:text-8xl border border-black m-5 uppercase">{ city }</div>
            </section>
            <section class="absolute inset-0 grid grid-cols-2 bg-stone-200 [transform:rotateY(180deg)] [backface-visibility:hidden] rounded-lg">
                <article class="grid place-content-center w-full border-r-2 p-4 my-4 border-black/25">{ message }</article>
                <article class="flex flex-col p-4 items-end gap-2 sm:gap-4">
                    <picture class="relative sm:mb-4">
                        <PostageStamp class="w-auto h-14 sm:h-20 text-black" />
                        <img class="absolute top-0 right-0 h-[48px] sm:h-[68px] w-[38px] sm:w-[54px] mt-[4px] sm:mt-[6px] mr-[4px] sm:mr-[5.5px]" src={ postageStamp } alt="">
                    </picture>
                    <span class="w-full border-b-2 border-black">From: { from }</span>
                    <span class="w-full border-b-2 border-black">To: { to }</span>
                    <span class="w-full border-b-2 border-black">Date: { date }</span>
                </article>
            </section>
        </div>
    </div>
</city-postcard>

<script>
    class CityPostcard extends HTMLElement {
        constructor() {
            super();

            const city = this.dataset.city as string;
            const postcardContainer = document.getElementById(`${city}PostcardContainer`) as HTMLDivElement;
            const postcard = document.getElementById(`${city}Postcard`) as HTMLDivElement;
            let flipped = false;

            postcardContainer.addEventListener('click', () => {
                if (flipped) {
                    postcard.style.transform = 'rotateY(0deg)'
                    flipped = false;
                    return;
                }
                postcard.style.transform = 'rotateY(180deg)'
                flipped = true;
            })
        }
    }

    customElements.define('city-postcard', CityPostcard);
</script>